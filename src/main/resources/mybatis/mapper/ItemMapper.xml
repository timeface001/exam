<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fs.ntes.domain.mapper.ItemMapper">
  <resultMap id="BaseResultMap" type="com.fs.ntes.domain.Item">
    <id column="a_id" jdbcType="INTEGER" property="id" />
    <result column="a_name" jdbcType="VARCHAR" property="name" />
    <result column="a_year" jdbcType="INTEGER" property="year" />
    <result column="a_desc" jdbcType="VARCHAR" property="desc" />
    <result column="a_cover" jdbcType="VARCHAR" property="cover" />
    <result column="a_uid" jdbcType="INTEGER" property="uid" />
    <result column="a_create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="a_update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    a.id as a_id, a.name as a_name, a.year as a_year, a.desc as a_desc, a.cover as a_cover, 
    a.uid as a_uid, a.create_time as a_create_time, a.update_time as a_update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from item a
    where a.id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from item
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.fs.ntes.domain.Item">
    insert into item (id, name, year, 
      desc, cover, uid, create_time, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{year,jdbcType=INTEGER}, 
      #{desc,jdbcType=VARCHAR}, #{cover,jdbcType=VARCHAR}, #{uid,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.fs.ntes.domain.Item">
    insert into item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="year != null">
        year,
      </if>
      <if test="desc != null">
        desc,
      </if>
      <if test="cover != null">
        cover,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="year != null">
        #{year,jdbcType=INTEGER},
      </if>
      <if test="desc != null">
        #{desc,jdbcType=VARCHAR},
      </if>
      <if test="cover != null">
        #{cover,jdbcType=VARCHAR},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fs.ntes.domain.Item">
    update item
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="year != null">
        year = #{year,jdbcType=INTEGER},
      </if>
      <if test="desc != null">
        desc = #{desc,jdbcType=VARCHAR},
      </if>
      <if test="cover != null">
        cover = #{cover,jdbcType=VARCHAR},
      </if>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fs.ntes.domain.Item">
    update item
    set name = #{name,jdbcType=VARCHAR},
      year = #{year,jdbcType=INTEGER},
      desc = #{desc,jdbcType=VARCHAR},
      cover = #{cover,jdbcType=VARCHAR},
      uid = #{uid,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>